Index: src/execution/builtins.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   builtins.c                                         :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: alappas <alappas@student.42wolfsburg.de    +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/11/06 21:09:35 by vkozlova          #+#    #+#             */\n/*   Updated: 2023/11/19 21:51:13 by alappas          ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"../../include/minishell.h\"\n\nint\tis_builtin(t_cmd_list *list)\n{\n\tif (list && list->value)\n\t{\n\t\tif (ft_strcmp(list->value, \"echo\") == 0)\n\t\t\treturn (1);\n\t\telse if (ft_strcmp(list->value, \"cd\") == 0)\n\t\t\treturn (1);\n\t\telse if (ft_strcmp(list->value, \"pwd\") == 0)\n\t\t\treturn (1);\n\t\telse if (ft_strcmp(list->value, \"export\") == 0)\n\t\t\treturn (1);\n\t\telse if (ft_strcmp(list->value, \"unset\") == 0)\n\t\t\treturn (1);\n\t\telse if (ft_strcmp(list->value, \"env\") == 0)\n\t\t\treturn (1);\n\t\telse if (ft_strcmp(list->value, \"exit\") == 0)\n\t\t\treturn (1);\n\t}\n \treturn (0);\n}\n\nvoid\tcall_builtin_func(t_data *data, t_cmd_list *list)\n{\n\tif (ft_strcmp(list->value, \"echo\") == 0)\n\t\techo(list);\n\telse if (ft_strcmp(list->value, \"cd\") == 0)\n\t\tcd(data, list);\n\telse if (ft_strcmp(list->value, \"pwd\") == 0)\n\t\tpwd();\n//\telse if (ft_strcmp(list->value, \"export\") == 0)\n//\t\treturn (1);\n\telse if (ft_strcmp(list->value, \"unset\") == 0)\n\t\tunset(data, list);\n\telse if (ft_strcmp(list->value, \"env\") == 0)\n\t\tenv(data);\n\telse if (ft_strcmp(list->value, \"exit\") == 0)\n\t\texit_builtin(data, list);\n}\n\nvoid\tenv(t_data *data)\n{\n\tint\ti;\n\n\ti = 0;\n\tif (ft_strcmp(data->list->value, \"env\") != 0)\n\t\treturn ;\n\twhile (data->env_array[i])\n\t{\n\t\tprintf(\"%s\\n\", data->env_array[i]);\n\t\ti++;\n\t}\n}\n\n// pwd: too many arguments\n// pwd: bad option: -h\nvoid\tpwd(void)\n{\n\tchar\t*cwd;\n\n\tcwd = NULL;\n\tcwd = getcwd(cwd, 1);\n\tprintf(\"%s\\n\", cwd);\n\tfree(cwd);\n}\n\n// shouldn't change the directory if HOME variable is unset\n// need to check when unset is ready\n//\n//If no directory operand is given and the HOME environment\n//variable is empty or undefined, the default behavior is\n//implementation-defined and no further steps shall be taken.\n//\n//function doesn't change PWD variable\nvoid\tcd(t_data *data, t_cmd_list *list)\n{\n//\tif (ft_strcmp(tree->value, \"cd\") != 0)\n//\t\treturn ;\n\tif (!(list->args_array[1]))\n\t\tchdir(getenv(\"HOME\"));\n\telse if (list->args_array[1] && chdir(list->args_array[1]) == -1)\n\t{\n\t\tprintf(\"cd: no such file or directory: %s\\n\", list->args_array[1]);\n\t\tdata->exit_status = errno;\n\t}\n//\t\tperror(ft_strjoin(\"cd: no such file or directory: \", tree->args_array[1]));\n}\n\nvoid exit_builtin(t_data *data, t_cmd_list *list)\n{\n\tint i;\n\n\ti = 0;\n\tif (list->args_array[1])\n\t{\n\t\twhile (list->args_array[1][i])\n\t\t{\n\t\t\tif (!ft_isdigit(list->args_array[1][i]))\n\t\t\t{\n\t\t\t\tprintf(\"bash: exit: %s: numeric argument required\\n\", list->args_array[1]);\n\t\t\t\texit_shell(\"exit\", data->exit_status, data);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (list->args_array[2])\n\t\t{\n\t\t\tprintf(\"minishell: exit: too many arguments\\n\");\n\t\t\treturn ;\n\t\t}\n\t\texit_shell(\"exit\", ft_atoi(list->args_array[1]), data);\n\t}\n\texit_shell(\"exit\", data->exit_status, data);\n\t// free!!!\n}\n\n// void\tbuiltin_unset(t_list **head, char *var_name)\n// {\n// \tt_list *curr = *head;\n// \tt_list *prev = NULL;\n\n// \twhile (curr != NULL)\n// \t{\n// \t\tt_envir *env = (t_envir *)curr->content;\n// \t\tif (ft_strcmp(env->var_name, var_name) == 0)\n// \t\t{\n// \t\t\tif (prev == NULL)\n// \t\t\t\t*head = curr->next;\n// \t\t\telse\n// \t\t\t\tprev->next = curr->next;\n// \t\t\tft_lstdelone(curr, &free);\n// \t\t\treturn;\n// \t\t}\n// \t\tprev = curr;\n// \t\tcurr = curr->next;\n// \t}\n// }\n\n// void\tbuiltin_env(t_list *head)\n// {\n// \tt_envir *env;\n\n// \twhile (head != NULL)\n// \t{\n// \t\tenv = (t_envir *)head->content;\n// \t\tprintf(\"%s=%s\\n\", env->var_name, env->var_value);\n// \t\tprintf(\"\\n\");\n// \t\thead = head->next;\n// \t}\n// }\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/execution/builtins.c b/src/execution/builtins.c
--- a/src/execution/builtins.c	(revision c05c7361a13b960453bfab1cb621de5b9db327ef)
+++ b/src/execution/builtins.c	(date 1700611228000)
@@ -6,7 +6,7 @@
 /*   By: alappas <alappas@student.42wolfsburg.de    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/11/06 21:09:35 by vkozlova          #+#    #+#             */
-/*   Updated: 2023/11/19 21:51:13 by alappas          ###   ########.fr       */
+/*   Updated: 2023/11/20 00:29:36 by alappas          ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
Index: src/execution/pipe.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   pipe.c                                             :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: alappas <alappas@student.42wolfsburg.de    +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/11/14 20:58:01 by vkozlova          #+#    #+#             */\n/*   Updated: 2023/11/19 19:15:30 by alappas          ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"../../include/minishell.h\"\n\nvoid\tredir_output(char *name, t_data *data)\n{\n\tint\tfile;\n\n\tfile = open(name, O_WRONLY | O_CREAT | O_TRUNC, 0777);\n\tif (file < 0 || dup2(file, STDOUT_FILENO) < 0)\n\t\tdata->exit_status = errno;\n\tclose(file);\n//\t\treturn (errno);\n}\n\nvoid\tredir_input(char *name, t_data *data)\n{\n\tint\tfile;\n\n\tfile = open(name, O_RDONLY, 0777);\n\tif (file < 0)\n\t{\n\t\tprintf(\"minishell: %s: No such file or directory\\n\", name);\n\t\tdata->exit_status = errno;\n//\t\treturn (errno);\n\t}\n\tif (dup2(file, STDIN_FILENO) < 0)\n\t\tdata->exit_status = errno;\n//\t\treturn (errno);\n\tclose(file);\n\t// bash: end: No such file or directory\n}\n\nvoid\tappend(char *name, t_data *data)\n{\n\tint\tfile;\n\n\tfile = open(name, O_WRONLY | O_CREAT | O_APPEND, 0777);\n\tif (file < 0 || dup2(file, STDOUT_FILENO) < 0)\n\t\tdata->exit_status = errno;\n//\t\treturn (errno);\n\tclose(file);\n}\n\nvoid\tmanage_redir(t_cmd_list *list, t_data *data)\n{\n\tt_redir\t*redir_list;\n\n\tredir_list = list->redir_list;\n//\tprintf(\"I am in manage redir function\\n\");\n\twhile (redir_list)\n\t{\n//\t\tprintf(\"I am in manage redir loop\\n\");\n\t\tif (redir_list->redir_token->type == T_RED_OUT)\n\t\t\tredir_output(redir_list->redir_word->word, data);\n\t\telse if (redir_list->redir_token->type == T_RED_INP)\n\t\t\tredir_input(redir_list->redir_word->word, data);\n\t\telse if (redir_list->redir_token->type == T_APPEND)\n\t\t\tappend(redir_list->redir_word->word, data);\n//\t\telse if (redir_list->redir_token->type == T_DELIM)\n//\t\t\tdelim(redir_list->redir_word->word, data);\n\t\tredir_list = redir_list->next;\n\t}\n}\n\nint\tcount_pipes(t_cmd_list *list)\n{\n\tint\tpipes;\n\n\tpipes = 0;\n\twhile (list)\n\t{\n\t\tlist = list->next;\n\t\tpipes++;\n\t}\n\treturn (pipes);\n}\n\n//    !!!! exec error\nint\texec_cmd(t_data *data, t_cmd_list *list)\n{\n\tmanage_redir(list, data);\n\tif (is_builtin(list))\n\t{\n\t\tcall_builtin_func(data, list);\n\t\texit(1);\n\t}\n\telse if (execve(find_command_path(data, list),\n\t\t   list->args_array, data->path) < 0)\n\t\tprintf(\"exec error\\n\");\n\treturn (0);\n}\n\nint\texec_pipe(t_data *data, t_cmd_list *list)\n{\n\tint \tpid;\n\tint\t\tfd[2];\n\n\tif (pipe(fd) == -1)\n\t\texit(0);\n\tpid = fork();\n//\tif (pid == -1)\n//\t\texit(0);\n\tif (pid == 0)\n\t{\n\t\tdup2(fd[1], 1);\n\t\tclose(fd[0]);\n\t\tclose(fd[1]);\n\t\texec_cmd(data, list);\n//\t\tperror(\"ls\");\n//\t\texit(1);\n\t}\n\twaitpid(pid, NULL, 0);\n\n\tdup2(fd[0], 0);\n\tclose(fd[0]);\n\tclose(fd[1]);\n\treturn (0);\n}\n\nint\texec_pipes(t_data *data)\n{\n\tt_cmd_list\t*list;\n\tint stdin;\n\tint stdout;\n\n\tlist = data->list;\n\tstdin = dup(0);\n\tstdout = dup(1);\n\twhile (list && list->next)\n\t{\n\t\texec_pipe(data, list);\n\t\tlist = list->next;\n\t}\n\t//errors\n\tint \tpid;\n\tpid = fork();\n\tif (pid == 0)\n\t\texec_cmd(data, list);\n\twaitpid(pid, NULL, 0);\n\tclose(STDOUT_FILENO);\n\tclose(STDIN_FILENO);\n\tdup2(stdin, 0);\n\tdup2(stdout, 1);\n\treturn (0);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/execution/pipe.c b/src/execution/pipe.c
--- a/src/execution/pipe.c	(revision c05c7361a13b960453bfab1cb621de5b9db327ef)
+++ b/src/execution/pipe.c	(date 1700611228000)
@@ -6,7 +6,7 @@
 /*   By: alappas <alappas@student.42wolfsburg.de    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/11/14 20:58:01 by vkozlova          #+#    #+#             */
-/*   Updated: 2023/11/19 19:15:30 by alappas          ###   ########.fr       */
+/*   Updated: 2023/11/20 20:39:04 by alappas          ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
Index: src/minishell/program_loop.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   program_loop.c                                     :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: alappas <alappas@student.42wolfsburg.de    +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/11/04 20:51:13 by eseferi           #+#    #+#             */\n/*   Updated: 2023/11/19 23:44:00 by alappas          ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"../../include/minishell.h\"\n\nvoid\tstart_loop(t_data *data)\n{\n\tchar\t*line;\n\n\twhile (1)\n\t{\n\t\treset_data(data);\n\t\tline = readline(data->input_minishell);\n//\t\tline = readline(\"\");\n\t\t// data->input_line = \"(1 | 2)\";\n\t\tif (handle_d(data, line))\n\t\t\tcontinue ;\n\t\tif (ft_strlen(line) > 0)\n\t\t\tadd_history(line);\n\t\tdata->input_line = trim_input(line);\n\t\tdata->input_line = replace_dollars(data->input_line, data);\n\t\tft_strdel(&line);\n//\t\tcheck_exit(data->input_line);\n\t\tif ((odd_quote(data->input_line)) || (special_chars(data->input_line))\n\t\t\t|| (lexical_analysis(data, data->input_line)))\n\t\t\tcontinue ;\n\n\t\tinit_tree(data);\n\t\texec_pipes(data);\n//\t\texec_cmd(data, data->list);\n//\t\tmanage_redir(data->list, data);\n//\t\tif (is_builtin(data->list))\n//\t\t\tcall_builtin_func(data, data->list);\n\t}\n}\n\nvoid\texecute(t_data *data)\n{\n\tt_cmd_list\t*list;\n\n\tlist = data->list;\n\twhile (list)\n\t{\n\t\tlist = list->next;\n\t}\n}\n// printf(\"token length: %d\\n\", token_len(data->token_list));\n// free(data->input_line);\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/minishell/program_loop.c b/src/minishell/program_loop.c
--- a/src/minishell/program_loop.c	(revision c05c7361a13b960453bfab1cb621de5b9db327ef)
+++ b/src/minishell/program_loop.c	(date 1700611228000)
@@ -6,7 +6,7 @@
 /*   By: alappas <alappas@student.42wolfsburg.de    +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2023/11/04 20:51:13 by eseferi           #+#    #+#             */
-/*   Updated: 2023/11/19 23:44:00 by alappas          ###   ########.fr       */
+/*   Updated: 2023/11/20 00:25:31 by alappas          ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -35,7 +35,7 @@
 			continue ;
 
 		init_tree(data);
-		exec_pipes(data);
+		// exec_pipes(data);
 //		exec_cmd(data, data->list);
 //		manage_redir(data->list, data);
 //		if (is_builtin(data->list))
